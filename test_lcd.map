Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
                              test_lcd.o (__mulhi3)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o (exit)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
                              test_lcd.o (__do_copy_data)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
                              test_lcd.o (__do_clear_bss)
/usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
                              test_lcd.o (itoa)
/usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

time                0x1               test_lcd.o
enc_delta           0x1               test_lcd.o
buf                 0xa               test_lcd.o
sides               0x1               test_lcd.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
LOAD test_lcd.o
LOAD lcd.o
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.1.2/libgcc.a
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.1.2/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5e0
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x10 test_lcd.o
                0x0000000000000026                table
                0x0000000000000036                . = ALIGN (0x2)
                0x0000000000000036                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000036        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000036                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000036                __ctors_start = .
 *(.ctors)
                0x0000000000000036                __ctors_end = .
                0x0000000000000036                __dtors_start = .
 *(.dtors)
                0x0000000000000036                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000036        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
                0x0000000000000036                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000036        0x8 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000003e       0x18 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
                0x000000000000003e                __do_copy_data
 .init4         0x0000000000000056       0x10 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
                0x0000000000000056                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000066        0x4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x000000000000006a        0x2 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
                0x000000000000006a                __vector_1
                0x000000000000006a                __vector_12
                0x000000000000006a                __bad_interrupt
                0x000000000000006a                __vector_6
                0x000000000000006a                __vector_3
                0x000000000000006a                __vector_11
                0x000000000000006a                __vector_17
                0x000000000000006a                __vector_7
                0x000000000000006a                __vector_5
                0x000000000000006a                __vector_4
                0x000000000000006a                __vector_9
                0x000000000000006a                __vector_2
                0x000000000000006a                __vector_15
                0x000000000000006a                __vector_8
                0x000000000000006a                __vector_14
                0x000000000000006a                __vector_10
                0x000000000000006a                __vector_16
                0x000000000000006a                __vector_18
 .text          0x000000000000006c      0x2e8 test_lcd.o
                0x000000000000024a                output_side_info
                0x0000000000000300                read_time
                0x0000000000000284                read_sides
                0x00000000000000e2                encode_read
                0x000000000000006c                __vector_13
                0x00000000000000ce                encode_init
                0x00000000000000f6                key_pressed
                0x0000000000000330                main
                0x00000000000002bc                output_time_info
                0x0000000000000100                beep
                0x0000000000000122                start_doing_it
 .text          0x0000000000000354      0x1d0 lcd.o
                0x000000000000042e                lcd_data
                0x000000000000043e                lcd_gotoxy
                0x000000000000045e                lcd_putc
                0x0000000000000458                lcd_home
                0x0000000000000452                lcd_clrscr
                0x000000000000044c                lcd_getxy
                0x0000000000000482                lcd_puts
                0x000000000000049a                lcd_puts_p
                0x00000000000004ba                lcd_init
                0x000000000000041e                lcd_command
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .text          0x0000000000000524       0x46 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
                0x0000000000000524                itoa
 .text          0x000000000000056a       0x24 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(strrev.o)
                0x000000000000056a                strrev
 .text          0x000000000000058e        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
                0x000000000000058e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000058e       0x24 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
                0x000000000000058e                __mulhi3
 .text.libgcc   0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005b2       0x2c /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
                0x00000000000005b2                __udivmodhi4
                0x00000000000005de                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005de        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
                0x00000000000005de                exit
                0x00000000000005de                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005de        0x2 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005e0                _etext = .

.data           0x0000000000800060       0x58 load address 0x00000000000005e0
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
 .data          0x0000000000800060       0x58 test_lcd.o
 .data          0x00000000008000b8        0x0 lcd.o
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(strrev.o)
 .data          0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00000000008000b8                . = ALIGN (0x2)
                0x00000000008000b8                _edata = .
                0x00000000008000b8                PROVIDE (__data_end, .)

.bss            0x00000000008000b8        0xe
                0x00000000008000b8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
 .bss           0x00000000008000b8        0x1 test_lcd.o
 .bss           0x00000000008000b9        0x0 lcd.o
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(strrev.o)
 .bss           0x00000000008000b9        0x0 /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008000b9        0xd test_lcd.o
                0x00000000008000b9                time
                0x00000000008000ba                enc_delta
                0x00000000008000bb                buf
                0x00000000008000c5                sides
                0x00000000008000c6                PROVIDE (__bss_end, .)
                0x00000000000005e0                __data_load_start = LOADADDR (.data)
                0x0000000000000638                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c6        0x0
                0x00000000008000c6                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c6                PROVIDE (__noinit_end, .)
                0x00000000008000c6                _end = .
                0x00000000008000c6                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.stab           0x0000000000000000     0x1bf0
 *(.stab)
 .stab          0x0000000000000000     0x105c test_lcd.o
 .stab          0x000000000000105c      0xb94 lcd.o
                                        0xdd4 (size before relaxing)

.stabstr        0x0000000000000000      0xe58
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe58 test_lcd.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(test_lcd.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__bss_end                                         /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.1.2/libgcc.a(_clear_bss.o)
                                                  lcd.o
                                                  test_lcd.o
__do_copy_data                                    /usr/lib/gcc/avr/4.1.2/libgcc.a(_copy_data.o)
                                                  lcd.o
                                                  test_lcd.o
__heap_end                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__init                                            /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__mulhi3                                          /usr/lib/gcc/avr/4.1.2/libgcc.a(_mulhi3.o)
                                                  test_lcd.o
__stack                                           /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.1.2/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
__vector_1                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_10                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_11                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_12                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_13                                       test_lcd.o
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_14                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_15                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_16                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_17                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_18                                       /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_2                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_3                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_4                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_5                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_6                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_7                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_8                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_9                                        /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vector_default                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
__vectors                                         /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
_exit                                             /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
beep                                              test_lcd.o
buf                                               test_lcd.o
enc_delta                                         test_lcd.o
encode_init                                       test_lcd.o
encode_read                                       test_lcd.o
exit                                              /usr/lib/gcc/avr/4.1.2/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
itoa                                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
                                                  test_lcd.o
key_pressed                                       test_lcd.o
lcd_clrscr                                        lcd.o
                                                  test_lcd.o
lcd_command                                       lcd.o
lcd_data                                          lcd.o
lcd_getxy                                         lcd.o
lcd_gotoxy                                        lcd.o
                                                  test_lcd.o
lcd_home                                          lcd.o
                                                  test_lcd.o
lcd_init                                          lcd.o
                                                  test_lcd.o
lcd_putc                                          lcd.o
lcd_puts                                          lcd.o
                                                  test_lcd.o
lcd_puts_p                                        lcd.o
main                                              test_lcd.o
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/crttn2313.o
output_side_info                                  test_lcd.o
output_time_info                                  test_lcd.o
read_sides                                        test_lcd.o
read_time                                         test_lcd.o
sides                                             test_lcd.o
start_doing_it                                    test_lcd.o
strrev                                            /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(strrev.o)
                                                  /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/libc.a(itoa.o)
table                                             test_lcd.o
time                                              test_lcd.o
